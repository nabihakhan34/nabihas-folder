
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Color Picker with Pins</title>
</head>
<style>
    * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.body {
  font-family: Arial, sans-serif;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #f5f5f5;
}

.color-picker-container {
  width: 100vw;
 
  padding: 20px;
  background-color: #fff;
  display: flex;
  flex-direction: column;

  align-items: center;
}

.color-box {
  width: 90%;
  height: 100px;
  background-color: #808080;
  margin-bottom: 20px;
  border: 1px solid #ccc;
  position: relative;
}

.gradient-slider {
  position: relative;
  width: 90%;
  height: 20px;
  margin-bottom: 20px;
  background: linear-gradient(to right,#808080, #bd9618);
}

.pin {
  position: absolute;
  width: 15px;
  height: 15px;
  background-color: #000;
  border-radius: 50%;
  top: -5px;
  cursor: pointer;
}

.sliders {
  width: 90%;
  margin-bottom: 20px;
}

.sliders input {
  width: 100%;
  margin: 10px 0;
}

.color-selection {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  width: 90%;
  margin: 20px 0;
}

.color-choose-box {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.color-choose-box input {
  width: 50px;
  height: 50px;
  border: none;
  cursor: pointer;
}

.color-choose-box p {
  margin-left: 20px;
  font-size: 18px;
}

.color-type-buttons {
  display: flex;
  justify-content: flex-start;
  gap: 10px; /* Reduce the space between buttons */
  width: 90%;
}

.color-type-buttons button {
  padding: 10px 20px;
  border-radius: 45px;
  background-color: #736149;
  margin: 0px 40px;
  color: white;
  cursor: pointer;
 
}

.color-type-buttons button:hover {
  background-color: #b8ad4b;
}

</style>
<body>
    <section class=" body">
  <div class="color-picker-container">
    
    <div class="color-box" id="colorBox"></div>

  
    <div class="gradient-slider">
      <div class="pin" id="pin1" style="left: 10%;"></div>
      <div class="pin" id="pin2" style="left: 90%;"></div>
    </div>

    
    <div class="color-selection">
   
      <div class="color-choose-box">
        <input type="color" id="color1Input" value="#808080">
        <p id="color1Code">#808080</p>
      </div>
    
      <div class="color-choose-box">
        <input type="color" id="color2Input" value="#bd9618">
        <p id="color2Code">#bd9618</p>
      </div>
    </div>

   
    <div class="color-type-buttons">
      <button id="radialButton">Radial</button>
      <button id="linearButton">Linear</button>
    </div>
  </div>
</section>
  <script>
    let colorBox = document.getElementById('colorBox');
let color1Input = document.getElementById('color1Input');
let color2Input = document.getElementById('color2Input');
let color1Code = document.getElementById('color1Code');
let color2Code = document.getElementById('color2Code');
let linearButton = document.getElementById('linearButton');
let radialButton = document.getElementById('radialButton');
let pin1 = document.getElementById('pin1');
let pin2 = document.getElementById('pin2');
let gradientSlider = document.querySelector('.gradient-slider');

let isDragging1 = false;
let isDragging2 = false;


function updateGradient(type) {
  let color1 = color1Input.value;
  let color2 = color2Input.value;
  let pin1Position = parseFloat(pin1.style.left);
  let pin2Position = parseFloat(pin2.style.left);

 
  color1Code.textContent = color1;
  color2Code.textContent = color2;

  if (type === 'linear') {
    colorBox.style.background = `linear-gradient(to right, ${color1} ${pin1Position}%, ${color2} ${pin2Position}%)`;
  } else if (type === 'radial') {
    colorBox.style.background = `radial-gradient(circle, ${color1} ${pin1Position}%, ${color2} ${pin2Position}%)`;
  }


  gradientSlider.style.background = `linear-gradient(to right, ${color1}, ${color2})`;
}


updateGradient('linear');


color1Input.addEventListener('input', () => updateGradient('linear'));
color2Input.addEventListener('input', () => updateGradient('linear'));


linearButton.addEventListener('click', () => updateGradient('linear'));
radialButton.addEventListener('click', () => updateGradient('radial'));


function dragPin(pin, event) {
  let sliderWidth = pin.parentElement.offsetWidth;
  let sliderOffsetLeft = pin.parentElement.offsetLeft;
  let newLeft = ((event.pageX - sliderOffsetLeft) / sliderWidth) * 100;
  newLeft = Math.max(0, Math.min(100, newLeft)); // Ensure pins stay within bounds
  pin.style.left = newLeft + '%';
  updateGradient('linear');
}


pin1.addEventListener('mousedown', () => { isDragging1 = true; });
pin2.addEventListener('mousedown', () => { isDragging2 = true; });


document.addEventListener('mousemove', (event) => {
  if (isDragging1) dragPin(pin1, event);
  if (isDragging2) dragPin(pin2, event);
});

document.addEventListener('mouseup', () => {
  isDragging1 = false;
  isDragging2 = false;
});

    </script>
</body>
</html>
color picker.html
Displaying color picker.html.
